services:
  db:
    image: mysql:latest
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: ${ROOTPW}
      MYSQL_DATABASE: ${DB}
      MYSQL_USER: ${USER}
      MYSQL_PASSWORD: ${PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  web:
    build: .
    container_name: django-container
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A core worker --loglevel=info
    volumes:
      - .:/app
      - /tmp:/tmp
    depends_on:
      db:
        condition: service_healthy
      web:
       condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A core beat --loglevel=info
    volumes:
      - .:/app
      - /tmp:/tmp
    depends_on:
      db:
        condition: service_healthy
      web:
       condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env

volumes:
  db_data:
